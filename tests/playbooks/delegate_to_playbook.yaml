---
- name: Test delegate_to functionality
  hosts: all

  tasks:
    - name: define facts
      ansible.builtin.set_fact:
        delegated_to_localhost_content: "File created on localhost by delegate_to. inventory_hostname was {{ inventory_hostname }}."
        delegated_to_localhost_file: "/tmp/spage/delegate_test_on_localhost.txt"

        on_inventory_host_content: "File created on {{ inventory_hostname }}. inventory_hostname was {{ inventory_hostname }}."
        on_inventory_host_file: "/tmp/spage/delegate_test_on_inventory_host.txt"

        delegated_to_inventory_host_content: "File created on {{ inventory_hostname }} by delegate_to. inventory_hostname was {{ inventory_hostname }}."
        delegated_to_inventory_host_file: "/tmp/spage/delegate_test_delegated_to_inventory_host.txt"

    # Define a fact that contains a hostname to test templating in delegate_to
    - name: Define hostname fact for delegate_to testing
      ansible.builtin.set_fact:
        target_hostname: "{{ inventory_hostname }}"
        delegated_via_fact_content: "File created on {{ inventory_hostname }} via delegate_to using a fact. target_hostname was {{ target_hostname }}."
        delegated_via_fact_file: "/tmp/spage/delegate_test_via_fact.txt"

    - name: create dir
      file:
        path: /tmp/spage
        state: directory

    # Task 1: Create a file on localhost (control node) using delegate_to
    - name: Create file on localhost via delegate_to
      ansible.builtin.copy:
        content: "{{ delegated_to_localhost_content }}"
        dest: "{{ delegated_to_localhost_file }}"
        mode: "0644"
      delegate_to: localhost

    # Task 2: Create a file on the inventory_hostname (target host)
    - name: Create file on {{ inventory_hostname }}
      ansible.builtin.copy:
        content: "{{ on_inventory_host_content }}"
        dest: "{{ on_inventory_host_file }}"
        mode: "0644"

    # Task 3: Create a file on inventory_hostname via delegate_to {{ inventory_hostname }}
    - name: Create file on {{ inventory_hostname }} via delegate_to
      ansible.builtin.copy:
        content: "{{ delegated_to_inventory_host_content }}"
        dest: "{{ delegated_to_inventory_host_file }}"
        mode: "0644"
      delegate_to: "{{ inventory_hostname }}"

    # Task 4: Create a file using a fact in delegate_to field
    - name: Create file via delegate_to using fact
      ansible.builtin.copy:
        content: "{{ delegated_via_fact_content }}"
        dest: "{{ delegated_via_fact_file }}"
        mode: "0644"
      delegate_to: "{{ target_hostname }}"

    # Verification tasks (these run on inventory_hostname unless delegated)
    - name: Stat file on {{ inventory_hostname }} (created by non-delegated task)
      ansible.builtin.stat:
        path: "{{ on_inventory_host_file }}"
      register: stat_on_inventory_host_file

    - name: Read file content on {{ inventory_hostname }} (created by non-delegated task)
      ansible.builtin.slurp:
        src: "{{ on_inventory_host_file }}"
      register: slurp_on_inventory_host_file

    - name: Assert file exists on {{ inventory_hostname }} and has correct content
      ansible.builtin.assert:
        that:
          - stat_on_inventory_host_file.stat.exists
          - "slurp_on_inventory_host_file.content | b64decode | trim == on_inventory_host_content"
        fail_msg: "FAIL: Content or existence check for {{ on_inventory_host_file }} (on {{ inventory_hostname }})"
        success_msg: "PASS: {{ on_inventory_host_file }} (on {{ inventory_hostname }})"

    - name: Stat file on {{ inventory_hostname }} (created by task delegated to inventory_hostname)
      ansible.builtin.stat:
        path: "{{ delegated_to_inventory_host_file }}"
      register: stat_delegated_to_inventory_host_file

    - name: Read file content on {{ inventory_hostname }} (created by task delegated to inventory_hostname)
      ansible.builtin.slurp:
        src: "{{ delegated_to_inventory_host_file }}"
      register: slurp_delegated_to_inventory_host_file

    - name: Assert file delegated to {{ inventory_hostname }} exists and has correct content
      ansible.builtin.assert:
        that:
          - stat_delegated_to_inventory_host_file.stat.exists
          - "slurp_delegated_to_inventory_host_file.content | b64decode | trim == delegated_to_inventory_host_content"
        fail_msg: "FAIL: Content or existence check for {{ delegated_to_inventory_host_file }} (delegated to {{ inventory_hostname }})"
        success_msg: "PASS: {{ delegated_to_inventory_host_file }} (delegated to {{ inventory_hostname }})"

    # Verification for delegate_to via fact
    - name: Stat file created via delegate_to using fact
      ansible.builtin.stat:
        path: "{{ delegated_via_fact_file }}"
      register: stat_delegated_via_fact_file

    - name: Read file content created via delegate_to using fact
      ansible.builtin.slurp:
        src: "{{ delegated_via_fact_file }}"
      register: slurp_delegated_via_fact_file

    - name: Assert file delegated via fact exists and has correct content
      ansible.builtin.assert:
        that:
          - stat_delegated_via_fact_file.stat.exists
          - "slurp_delegated_via_fact_file.content | b64decode | trim == delegated_via_fact_content"
        fail_msg: "FAIL: Content or existence check for {{ delegated_via_fact_file }} (delegated via fact {{ target_hostname }})"
        success_msg: "PASS: {{ delegated_via_fact_file }} (delegated via fact {{ target_hostname }})"
